<launch>

<!-- Add params here-->
  <arg name="robot_namespace" default="/" />

  <arg name="sim" default="true" /> 
  <arg name="scan_topic" default="/scan"/>
  <arg name="laser_frame" default="base_laser"/>

  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.0"/>
  <arg name="phi" default="0.0"/>

  <arg name="laser_enabled" default="true"/>
  <arg name="kinect_enabled" default="false"/>
  <arg name="realsense_enabled" default="false"/>
  <arg name="velodyne_enabled" default="false"/>

  <arg name="map_path" default="$(find mowito_husky)/maps/playpen_map.yaml"/>
  <arg name="respawn" default="true"/>
  <arg name="debug" default="false"/>
  <arg name="world_name" default="mowito"/>
  <arg name="gui" default="false"/>
  <arg name="cartographer" default="false" />
  <arg name="urdf_extras" default="$(optenv HUSKY_URDF_EXTRAS)"/>

<!-- Global Param -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find husky_description)/urdf/husky.urdf.xacro'
    --inorder
    robot_namespace:=$(arg robot_namespace)
    laser_enabled:=$(arg laser_enabled)
    realsense_enabled:=$(arg realsense_enabled)
    urdf_extras:=$(arg urdf_extras)
    " />

  <rosparam command="load" file="$(find husky_control)/config/control.yaml" />


<!-- Gazebo world and robot-->
  <include file="$(find husky_gazebo)/launch/playpen.launch">
  </include>
  
  <node name="spawn_husky_model" pkg="gazebo_ros" type="spawn_model"
      args="-x $(arg x) -y $(arg y) -z $(arg z) -urdf -param robot_description -model $(arg robot_namespace)" />


<!-- Rviz robot and map-->

  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find mowito_husky)/rviz/navigation_map.rviz" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

<!-- Husky Controller-->
  <node pkg="twist_mux" type="twist_mux" name="twist_mux">
    <rosparam command="load" file="$(find husky_control)/config/twist_mux.yaml" />
    <remap from="cmd_vel_out" to="husky_velocity_controller/cmd_vel"/>
  </node>

  <node name="base_controller_spawner" pkg="controller_manager" type="spawner"
      args="husky_joint_publisher husky_velocity_controller"/>
  
  <!-- robot_localization publishes odom data -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
    <rosparam command="load" file="$(find husky_control)/config/localization.yaml" />
    <remap from="/odometry/filtered" to="/odom"/>
  </node>

    <!-- NAVIGATION -->
    <!-- localization node-->


    <!-- without cartographer-->
    <group unless="$(arg cartographer)">
    <include file="$(find mowito_husky)/launch/secondary_launch/start_mwpfl.launch">
        <arg name="map_address" value="$(arg map_path)"/>
        <arg name="robot_init_x" value="0"/>
        <arg name="robot_init_y" value="0"/>
        <arg name="robot_init_phi" value="0"/>
        <arg name="sim" value="true"/>
    </include>
    </group>

    <!-- with cartographer -->
    <group if="$(arg cartographer)">
    <node name="cartographer_node" pkg="cartographer_ros"
      type="cartographer_node" args="
          -configuration_directory $(find mowito_husky)/config/carto_config
          -configuration_basename husky_localization.lua
          -load_state_filename $(find mowito_husky)/maps/husky_playpen.pbstream"
      output="log">
    	<remap from="imu" to="imu/data" />
    	<!-- <remap from="odom" to="odometry/filtered" /> -->
      <remap from="odom" to="odom" />
    </node>

    <node name="cartographer_occupancy_grid_node" pkg="cartographer_ros"
      type="cartographer_occupancy_grid_node" args="-resolution 0.05" />
    </group>

    <!-- Nav Server-->
    <include file="$(find mowito_husky)/launch/secondary_launch/start_nav_server.launch">
        <arg name="mission_executive_config" value="$(find mowito_husky)/config/mission_executive_config/mission_executive_params.yaml"/>
        <arg name="respawn" value="$(arg respawn)"/>
        <arg name="gp_debug" value="$(arg debug)"/>
        <arg name="ctrl_debug" value="$(arg debug)"/>  
        <arg name="rcvr_debug" value="$(arg debug)"/>        
    </include>
    

</launch>
